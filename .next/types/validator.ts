// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap, AppRouteHandlerRoutes } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/types.js"
import type { NextRequest } from 'next/server.js'

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type RouteHandlerConfig<Route extends AppRouteHandlerRoutes = AppRouteHandlerRoutes> = {
  GET?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  POST?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PUT?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PATCH?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  DELETE?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  HEAD?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  OPTIONS?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
}


// Validate ../../app/employee-portal/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/employee-portal">> = Specific
  const handler = {} as typeof import("../../app/employee-portal/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/owner-dashboard/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/owner-dashboard">> = Specific
  const handler = {} as typeof import("../../app/owner-dashboard/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/">> = Specific
  const handler = {} as typeof import("../../app/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/auth/activity/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/auth/activity">> = Specific
  const handler = {} as typeof import("../../app/api/auth/activity/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/auth/login/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/auth/login">> = Specific
  const handler = {} as typeof import("../../app/api/auth/login/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/auth/logout/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/auth/logout">> = Specific
  const handler = {} as typeof import("../../app/api/auth/logout/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/auth/session/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/auth/session">> = Specific
  const handler = {} as typeof import("../../app/api/auth/session/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/auth/verify/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/auth/verify">> = Specific
  const handler = {} as typeof import("../../app/api/auth/verify/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/backup/export/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/backup/export">> = Specific
  const handler = {} as typeof import("../../app/api/backup/export/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/deliveries/create/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/deliveries/create">> = Specific
  const handler = {} as typeof import("../../app/api/deliveries/create/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/deliveries/list/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/deliveries/list">> = Specific
  const handler = {} as typeof import("../../app/api/deliveries/list/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/deliveries/update-status/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/deliveries/update-status">> = Specific
  const handler = {} as typeof import("../../app/api/deliveries/update-status/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/eod/range/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/eod/range">> = Specific
  const handler = {} as typeof import("../../app/api/eod/range/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/eod/summary/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/eod/summary">> = Specific
  const handler = {} as typeof import("../../app/api/eod/summary/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/expenses/create/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/expenses/create">> = Specific
  const handler = {} as typeof import("../../app/api/expenses/create/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/expenses/list/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/expenses/list">> = Specific
  const handler = {} as typeof import("../../app/api/expenses/list/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/materials/create/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/materials/create">> = Specific
  const handler = {} as typeof import("../../app/api/materials/create/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/materials/list/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/materials/list">> = Specific
  const handler = {} as typeof import("../../app/api/materials/list/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/materials/update/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/materials/update">> = Specific
  const handler = {} as typeof import("../../app/api/materials/update/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/profit/daily/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/profit/daily">> = Specific
  const handler = {} as typeof import("../../app/api/profit/daily/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/profit/monthly/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/profit/monthly">> = Specific
  const handler = {} as typeof import("../../app/api/profit/monthly/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/profit/summary/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/profit/summary">> = Specific
  const handler = {} as typeof import("../../app/api/profit/summary/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/profit/weekly/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/profit/weekly">> = Specific
  const handler = {} as typeof import("../../app/api/profit/weekly/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/reports/monthly-list/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/reports/monthly-list">> = Specific
  const handler = {} as typeof import("../../app/api/reports/monthly-list/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/reports/monthly/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/reports/monthly">> = Specific
  const handler = {} as typeof import("../../app/api/reports/monthly/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/sheets/append/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/sheets/append">> = Specific
  const handler = {} as typeof import("../../app/api/sheets/append/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/sheets/read/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/sheets/read">> = Specific
  const handler = {} as typeof import("../../app/api/sheets/read/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/sheets/write/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/sheets/write">> = Specific
  const handler = {} as typeof import("../../app/api/sheets/write/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/transactions/by-date/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/transactions/by-date">> = Specific
  const handler = {} as typeof import("../../app/api/transactions/by-date/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/transactions/by-employee/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/transactions/by-employee">> = Specific
  const handler = {} as typeof import("../../app/api/transactions/by-employee/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/transactions/by-material/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/transactions/by-material">> = Specific
  const handler = {} as typeof import("../../app/api/transactions/by-material/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/transactions/by-truck/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/transactions/by-truck">> = Specific
  const handler = {} as typeof import("../../app/api/transactions/by-truck/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/transactions/create/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/transactions/create">> = Specific
  const handler = {} as typeof import("../../app/api/transactions/create/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/transactions/filter/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/transactions/filter">> = Specific
  const handler = {} as typeof import("../../app/api/transactions/filter/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/transactions/list/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/transactions/list">> = Specific
  const handler = {} as typeof import("../../app/api/transactions/list/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/transactions/summary/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/transactions/summary">> = Specific
  const handler = {} as typeof import("../../app/api/transactions/summary/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/trucks/create/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/trucks/create">> = Specific
  const handler = {} as typeof import("../../app/api/trucks/create/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/trucks/list/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/trucks/list">> = Specific
  const handler = {} as typeof import("../../app/api/trucks/list/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/trucks/update/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/trucks/update">> = Specific
  const handler = {} as typeof import("../../app/api/trucks/update/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}





// Validate ../../app/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/">> = Specific
  const handler = {} as typeof import("../../app/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}
